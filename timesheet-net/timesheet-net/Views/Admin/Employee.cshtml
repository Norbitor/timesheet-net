@model timesheet_net.Models.Employees
@{
    if(Model == null) {
        ViewBag.Title = "Nowy pracownik";
    } else
    {
        ViewBag.Title = "Edycja pracownika";
    }
}

<h2>@ViewBag.Title</h2>
<hr/>
@if (Model == null)
{
    <p>
        Aby dodać konto pracownika wypełnij poniższy formularz. Dodany pracownik będzie mógł zalogować się
        do aplikacji natychmiast po dodaniu. Klikając "Anuluj", użytkownik nie zostanie utworzony,
        a przeglądarka powróci do widoku "Listy pracowników".
    </p>
}
else
{
    <p>
        Aby zmienić dane konta wybranego pracownika wypełnij poniższy formularz. Zmiany będą odzwierciedlone
        w systemie natychmiast po przetworzeniu przez serwer. Klikając "Anuluj", rezygnujesz z wprowadzenia
        zmian, a przeglądarka powróci do widoku "Listy pracowników".
    </p>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EmployeeID)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EMail, "Adres E-Mail:")
        @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, "Hasło:")
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Imię:")
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Surname, "Nazwisko:")
        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Telephone, "Numer telefonu:")
        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label class="control-label" for="JobPositionID">Stanowisko:</label>
        @Html.DropDownList("JobPositionID", String.Empty)
        @Html.ValidationMessageFor(model => model.JobPositionID, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-default">Dodaj</button>
    @Html.ActionLink("Anuluj", "Employees", "Admin", null, new { @class = "btn btn-bold", @style="width: 100px;" })
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
