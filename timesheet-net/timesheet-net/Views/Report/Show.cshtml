@model IEnumerable<timesheet_net.Models.ShowReportViewModel>
@{
    ViewBag.Title = "Raport tygodniowy";
}

<h2>@ViewBag.Title za okres @ViewBag.StartDate &ndash; @ViewBag.FinishDate</h2>
@if (Model.Any(m => m.TimesheetState.TimesheetStateName == "Wypełniony"))
{
    <div class="alert alert-info" role="alert">Raport został wysłany i czeka na akceptację szefów poszczególnych projektów.</div>
}
@if (Model.All(m => m.TimesheetState.TimesheetStateName == "Zaakceptowany"))
{
    <div class="alert alert-success" role="alert">Timesheet został zaakceptowany!</div>
}
@if (Model.Any(m => m.TimesheetState.TimesheetStateName == "Odrzucony"))
{
    <div class="alert alert-danger" role="alert">
        Raport został odrzucony przez:
        <ul>
        @foreach(var mod in Model)
        {
            if(mod.TimesheetState.TimesheetStateName == "Odrzucony")
            {
                <li>(@mod.Projects.Employees.Name @mod.Projects.Employees.Surname), powód:
                     @mod.Comment</li>
            }
        }
        </ul>
        Proszę poprawić wskazane błędy w arkuszu i wysłać go ponownie do zaakceptowania.
    </div>
}

<h3>Podsumowanie</h3>
<table class="table">
    <tr>
        <th>Zadanie</th>
        <th>Pn</th>
        <th>Wt</th>
        <th>Śr</th>
        <th>Cz</th>
        <th>Pt</th>
        <th>So</th>
        <th>Nd</th>
        <th>Suma</th>
        <th>Komentarz</th>
    </tr>
    @foreach (var m in Model)
    {
        <tr class="report-proj-discriminant">
            <td colspan="10">@m.Projects.Name</td>
        </tr>
        foreach (var t in m.Tasks)
        {
            <tr>
                <td>@t.TaskName</td>
                <td>@t.MondayHours</td>
                <td>@t.TuesdayHours</td>
                <td>@t.WednesdayHours</td>
                <td>@t.ThursdayHours</td>
                <td>@t.FridayHours</td>
                <td>@t.SaturdayHours</td>
                <td>@t.SundayHours</td>
                <td class="report-proj-sum">
                    @(t.MondayHours + t.TuesdayHours + t.WednesdayHours + t.ThursdayHours +
                      t.FridayHours + t.SaturdayHours + t.SundayHours)
                </td>
                <td>@t.Comment</td>
            </tr>
        }
    }
    <tr class="report-proj-sum">
        <td>Suma</td>
        <td>@(Model.Sum(m => m.MondaySum))</td>
        <td>@(Model.Sum(m => m.TuesdaySum))</td>
        <td>@(Model.Sum(m => m.WednesdaySum))</td>
        <td>@(Model.Sum(m => m.ThursdaySum))</td>
        <td>@(Model.Sum(m => m.FridaySum))</td>
        <td>@(Model.Sum(m => m.SaturdaySum))</td>
        <td>@(Model.Sum(m => m.SundaySum))</td>
        <td>
            @(Model.Sum(m => m.MondaySum) + Model.Sum(m => m.TuesdaySum) + Model.Sum(m => m.WednesdaySum) +
              Model.Sum(m => m.ThursdaySum) + Model.Sum(m => m.FridaySum) + Model.Sum(m => m.SaturdaySum) + Model.Sum(m => m.SundaySum))
        </td>
        <td></td>
    </tr>
</table>

<h3>Status raportu</h3>
<table class="table table-striped">
    <tr>
        <th>Projekt</th>
        <th>Szef projektu</th>
        <th>Status</th>
        <th>Komentarz</th>
    </tr>
    @foreach(var m in Model)
    {
        <tr>
            <td>@m.Projects.Name</td>
            <td>@m.Projects.Employees.Name @m.Projects.Employees.Surname</td>
            <td>@m.TimesheetState.TimesheetStateName</td>
            <td>@m.Comment</td>
        </tr>
    }
</table>
