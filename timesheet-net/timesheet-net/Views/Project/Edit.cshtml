@model timesheet_net.Models.Projects
@{
    ViewBag.Title = "Edycja projektu";
}

<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProjectID)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, "Nazwa projektu:")
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label" for="JobPositionID">Szef projektu:</label>
                @Html.DropDownList("SuperiorID", null, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SuperiorID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Start, "Data rozpoczęcia:")
                <div class="input-group date" id="start-datepicker">

                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control",
                                    @Value = Model.Start.ToString("yyyy-MM-dd") } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Finish, "Data zakończenia:")
                <div class="input-group date" id="finish-datepicker">
                    @Html.EditorFor(model => model.Finish, new { htmlAttributes = new { @class = "form-control",
                                    @Value = (Model.Finish.HasValue ? Model.Finish.Value.ToString("yyyy-MM-dd") : string.Empty) } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Finish, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-default btn-main">Zapisz</button>
            @Html.ActionLink("Anuluj", "Overview", "Project", null, new { @class = "btn btn-bold", @style = "width: 100px;" })
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $('#start-datepicker').datetimepicker({
                locale: 'pl',
                format: 'YYYY-MM-DD'
            });
            $('#finish-datepicker').datetimepicker({
                locale: 'pl',
                format: 'YYYY-MM-DD'
            });
            $("#start-datepicker").on("dp.change", function (e) {
                $('#finish-datepicker').data("DateTimePicker").minDate(e.date);
            });
            $("#finish-datepicker").on("dp.change", function (e) {
                $('#start-datepicker').data("DateTimePicker").maxDate(e.date);
            });
        });
    </script>
}
